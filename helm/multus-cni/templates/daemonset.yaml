---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "name" . }}
  namespace: kube-system
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "labels.selector" . | nindent 6 }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        tier: node
        {{- include "labels.common" . | nindent 8 }}
    spec:
      hostNetwork: true
      tolerations:
        - operator: Exists
          effect: NoSchedule
        - operator: Exists
          effect: NoExecute
      serviceAccountName: {{ include "name" . }}
      containers:
        - name: kube-multus
          image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          args:
            - "--cni-version=0.3.1"
            - "--multus-conf-file={{ if .Values.cniConfig }}/tmp/multus-conf/00-multus.conf{{ else }}auto{{ end }}"
            - "--cleanup-config-on-exit=true"
            - "--multus-log-to-stderr=true"
            - "--multus-log-level=debug"
          resources:
            requests:
              cpu: "100m"
              memory: "50Mi"
            limits:
              cpu: "100m"
              memory: "50Mi"
          securityContext:
            privileged: true
          volumeMounts:
            - name: cni
              mountPath: /host/etc/cni/net.d
            - name: cnibin
              mountPath: /host/opt/cni/bin
            {{- if .Values.cniConfig }}
            - name: multus-cfg
              mountPath: /tmp/multus-conf
            {{- end }}
      initContainers:
        - name: install-multus-binary
          image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          command:
            - "cp"
            - "/usr/src/multus-cni/bin/multus"
            - "/host/opt/cni/bin/multus"
          resources:
            requests:
              cpu: "10m"
              memory: "15Mi"
          securityContext:
            privileged: true
          volumeMounts:
            - name: cnibin
              mountPath: /host/opt/cni/bin
              mountPropagation: Bidirectional
        - name: generate-kubeconfig
          image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
          command:
            - "/usr/src/multus-cni/bin/generate-kubeconfig"
          args:
            - "-k8s-service-host=$(KUBERNETES_SERVICE_HOST)"
            - "-k8s-service-port=$(KUBERNETES_SERVICE_PORT)"
          resources:
            requests:
              cpu: "10m"
              memory: "15Mi"
          securityContext:
            privileged: true
          volumeMounts:
            - name: cni
              mountPath: /host/etc/cni/net.d
              mountPropagation: Bidirectional
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cni
          hostPath:
            path: /etc/cni/net.d
        - name: cnibin
          hostPath:
            path: /opt/cni/bin
      {{- if .Values.cniConfig }}
        - name: multus-cfg
          configMap:
            name: multus-cni-config
            items:
              - key: cni-conf.json
                path: 00-multus.conf
      {{- end }}
